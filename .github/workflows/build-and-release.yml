name: Build and Release libsoundio

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          pkg-config \
          libasound2-dev \
          libpulse-dev \
          libjack-dev \
          libdbus-1-dev \
          libsamplerate0-dev \
          libsndfile1-dev
          
    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_STATIC_LIBS=OFF \
          -DBUILD_DYNAMIC_LIBS=ON \
          -DBUILD_EXAMPLE_PROGRAMS=OFF \
          -DBUILD_TESTS=ON \
          -DENABLE_ALSA=ON \
          -DENABLE_PULSEAUDIO=ON \
          -DENABLE_JACK=ON \
          -DENABLE_COREAUDIO=OFF \
          -DENABLE_WASAPI=OFF
          
    - name: Build
      run: |
        cd build
        make -j$(nproc)
        
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure
        
    - name: Create artifacts
      run: |
        cd build
        mkdir -p artifacts
        # Include SONAME symlink and actual library; preserve symlinks
        for f in libsoundio.so libsoundio.so.*; do
          if [ -e "$f" ]; then cp -a "$f" artifacts/; fi
        done
        # Archive
        tar -czf libsoundio-linux-x64.tar.gz -C artifacts .
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libsoundio-linux-x64
        path: build/libsoundio-linux-x64.tar.gz
        
  build-macos-arm64:
    runs-on: macos-14

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_STATIC_LIBS=OFF \
          -DBUILD_DYNAMIC_LIBS=ON \
          -DBUILD_EXAMPLE_PROGRAMS=OFF \
          -DBUILD_TESTS=ON \
          -DENABLE_ALSA=OFF \
          -DENABLE_PULSEAUDIO=OFF \
          -DENABLE_JACK=OFF \
          -DENABLE_COREAUDIO=ON \
          -DENABLE_WASAPI=OFF

    - name: Build
      run: |
        cd build
        make -j"$(sysctl -n hw.ncpu)"

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

    - name: Create artifacts
      run: |
        cd build
        mkdir -p artifacts
        # Include install_name symlink(s) and actual library; preserve symlinks
        for f in libsoundio.dylib libsoundio.*.dylib; do
          if [ -e "$f" ]; then cp -a "$f" artifacts/; fi
        done
        # Archive
        tar -czf libsoundio-macos-arm64.tar.gz -C artifacts .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libsoundio-macos-arm64
        path: build/libsoundio-macos-arm64.tar.gz
        
  create-release:
    needs: [build-linux, build-macos-arm64]
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: libsoundio-linux-x64
        path: artifacts/

    - name: Download macOS ARM artifact
      uses: actions/download-artifact@v4
      with:
        name: libsoundio-macos-arm64
        path: artifacts/
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/libsoundio-linux-x64.tar.gz
          artifacts/libsoundio-macos-arm64.tar.gz
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
